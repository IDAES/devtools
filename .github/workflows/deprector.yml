name: deprector

on:
  push:

env:
  PYTEST_ADDOPTS: --color=yes
  PIP_PROGRESS_BAR: "off"
  pip_install_target: git+https://github.com/${{ github.repository }}@${{ github.ref_name }}

jobs:

  cli:
    name: CLI (idaes=${{ matrix.ref }}/${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'
        ref:
          - 0309eec
          - 631015a
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install package (pip)
        run: |
          pip install "$pip_install_target"
          deprector --help
      - name: Install IDAES
        run: |
          pip install "idaes-pse @ https://github.com/IDAES/idaes-pse/archive/${{ matrix.ref }}.zip"
          idaes get-extensions --verbose --extra petsc
      - name: List deprecation function calls in source
        run: |
          deprector list-function-calls idaes --function-name deprecation_warning --function-name relocated_module_attribute
      - name: Create pytest.ini to silence warnings for unregistered pytest markers
        run: |
          cat << 'EOF' > pytest.ini
          [pytest]
          markers =
              build: test of model build methods
              cubic_root : test requires the compiled cubic root finder
              iapws: test requires the compiled IAPWS95 property package
              initialization: test of initialization methods. These generally require a solver as well
              solver: test requires a solver
              ui: tests of an aspect of the ui
              unit: quick tests that do not require a solver, must run in <2s
              component: quick tests that may require a solver
              integration: long duration tests
              performance: tests for the IDAES performance testing suite
          EOF
      - name: Run collect
        if: success()
        run: |
          deprector collect idaes -- -m unit
      - name: Run analyze
        run: |
          deprector analyze idaes --callsite-registry idaes
      - uses: actions/upload-artifact@v3
        with:
          name: deprector-idaes-${{ matrix.python-version }}
          path: "*.json"

  cli-client:
    name: CLI (${{ matrix.package }}/idaes=${{ matrix.idaes-ref }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - watertap
          - dispatches
        idaes-ref:
          - 2.0.0a3
          - 0309eec
          - 631015a
        include:
          - package: watertap
            pip-target: watertap[testing] @ https://github.com/watertap-org/watertap/archive/main.zip
            collect-flags: ""
            python-version: "3.8"
          - package: dispatches
            pip-target: dispatches @ https://github.com/gmlc-dispatches/dispatches/archive/main.zip
            collect-flags: ""
            python-version: "3.8"
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install package (pip)
        run: |
          pip install "$pip_install_target"
          deprector --help
      - name: Install client package (${{ matrix.pip-target }})
        run: |
          pip install "${{ matrix.pip-target }}"
      - name: Install IDAES (in a separate step to avoid requirements constraint issues)
        run: |
          pip uninstall --yes idaes-pse
          pip install "idaes-pse @ https://github.com/IDAES/idaes-pse/archive/${{ matrix.idaes-ref }}.zip"
          idaes get-extensions --verbose
      - name: Run collect
        run: |
          deprector collect ${{ matrix.package }} ${{ matrix.collect-flags }}
      - name: Run analyze
        run: |
          deprector analyze ${{ matrix.package }}
      - uses: actions/upload-artifact@v3
        with:
          name: deprector-${{ matrix.package }}-${{ matrix.idaes-ref }}-${{ matrix.python-version }}
          path: "*.json"
